replacement_vector[i]
}
}
temp
}
temp <- combofactor("Natural gas", "Natural Gas", temp)
combofactor <-
function(pattern_vector,
replacement_vector,
data) {
temp <- data
for (i in 1:length(pattern_vector))
{
if (trimws(pattern_vector[i]) != "")
temp <-
factor(gsub(pattern_vector[i], replacement_vector[i], temp))
else
{
levels = levels(temp)
levels[which(pattern_vector[i] == levels)] <-
replacement_vector[i]
}
}
temp
}
temp <- data[,16]
temp <- combofactor("Natural gas", "Natural Gas", temp)
summary(temp)
temp <- data[,7]
temp <-
combofactor(c("Corning NATURAL Gas", ""),
c("Corning Natural Gas", "Unknown Gas Provider"),
temp)
summary(temp)
levels = levels(temp)
pattern_vector <- c("Corning NATURAL Gas", "")
which(pattern_vector[2] == levels)
combofactor <-
function(pattern_vector,
replacement_vector,
data) {
temp <- data
for (i in 1:length(pattern_vector))
{
if (trimws(pattern_vector[i]) != "")
temp <-
factor(gsub(pattern_vector[i], replacement_vector[i], temp))
else
{
levels = levels(temp)
levels[which(pattern_vector[i] == levels)] <-
replacement_vector[i]
temp <- factor(x,levels)
}
}
temp
}
temp <- data[,7]
temp <-
combofactor(c("Corning NATURAL Gas", ""),
c("Corning Natural Gas", "Unknown Gas Provider"),
temp)
combofactor <-
function(pattern_vector,
replacement_vector,
data) {
temp <- data
for (i in 1:length(pattern_vector))
{
if (trimws(pattern_vector[i]) != "")
temp <-
factor(gsub(pattern_vector[i], replacement_vector[i], temp))
else
{
levels = levels(temp)
levels[which(pattern_vector[i] == levels)] <-
replacement_vector[i]
temp <- factor(temp,levels)
}
}
temp
}
temp <-
combofactor(c("Corning NATURAL Gas", ""),
c("Corning Natural Gas", "Unknown Gas Provider"),
temp)
combofactor <-
function(pattern_vector,
replacement_vector,
data) {
temp <- data
for (i in 1:length(pattern_vector))
{
if (trimws(pattern_vector[i]) != "")
temp <-
factor(gsub(pattern_vector[i], replacement_vector[i], temp))
else
{
levels <- levels(temp)
levels[which(pattern_vector[i] == levels)] <-
replacement_vector[i]
levels(temp) <- levels
}
}
temp
}
temp <-
combofactor(c("Corning NATURAL Gas", ""),
c("Corning Natural Gas", "Unknown Gas Provider"),
temp)
combofactor <-
function(pattern_vector,
replacement_vector,
data) {
data
for (i in 1:length(pattern_vector))
{
if (trimws(pattern_vector[i]) != "")
data <-
factor(gsub(pattern_vector[i], replacement_vector[i], data))
else
{
levels <- levels(data)
levels[which(pattern_vector[i] == levels)] <-
replacement_vector[i]
levels(data) <- levels
}
}
data
}
temp <- data[,7]
temp <-
combofactor(c("Corning NATURAL Gas", ""),
c("Corning Natural Gas", "Unknown Gas Provider"),
temp)
combofactor <-
function(pattern_vector,
replacement_vector,
data) {
for (i in 1:length(pattern_vector))
{
levels <- levels(data)
levels[which(pattern_vector[i] == levels)] <-
replacement_vector[i]
levels(data) <- levels
}
data
}
temp <- data[,7]
temp <-
combofactor(c("Corning NATURAL Gas", ""),
c("Corning Natural Gas", "Unknown Gas Provider"),
temp)
temp <- data[,16]
temp <- combofactor("Natural gas", "Natural Gas", temp)
View(combofactor)
combofactor <-
function(pattern_vector,
replacement_vector,
data) {
for (i in 1:length(pattern_vector))
{
levels(data)[which(pattern_vector[i] == levels)] <-
replacement_vector[i]
}
data
}
temp <- data[,7]
temp <-
combofactor(c("Corning NATURAL Gas", ""),
c("Corning Natural Gas", "Unknown Gas Provider"),
temp)
temp <- data[,7]
temp <-
combofactor(c("Corning NATURAL Gas", ""),
c("Corning Natural Gas", "Unknown Gas Provider"),
temp)
summary(temp)
temp <- data[,7]
combofactor <-
function(pattern_vector,
replacement_vector,
data) {
for (i in 1:length(pattern_vector))
{
levels <- levels(data)
levels(data)[which(pattern_vector[i] == levels)] <-
replacement_vector[i]
levels(data) <- levels
}
data
}
temp <-
combofactor(c("Corning NATURAL Gas", ""),
c("Corning Natural Gas", "Unknown Gas Provider"),
temp)
combofactor <-
function(pattern_vector,
replacement_vector,
data) {
for (i in 1:length(pattern_vector))
{
levels <- levels(data)
levels[which(pattern_vector[i] == levels)] <-
replacement_vector[i]
levels(data) <- levels
}
data
}
temp <- data[,7]
temp <-
combofactor(c("Corning NATURAL Gas", ""),
c("Corning Natural Gas", "Unknown Gas Provider"),
temp)
shiny::runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
combofactor <-
function(pattern_vector,
replacement_vector,
data) {
for (i in 1:length(pattern_vector))
{
levels <- levels(data)
levels[which(pattern_vector[i] == levels)] <-
replacement_vector[i]
levels(data) <- levels
}
data
}
fuel_type <- combofactor("Natural gas", "Natural Gas", fuel_type)
barplot(summary(fuel_type))
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
qplot(
x = incentives,
y = savings_energy,
facets = . ~ fuel_type,
color = audit
)
rm(list = ls())
data <- read.csv("~/R/tutorials/datasets/energystar.csv")
county <- data[, 4]
city <- data[, 5]
zip <- data[, 6]
gas_utility <- data[, 7]
electric_utility <- data[, 8]
completion_date <- data[, 9]
customer_type <- data[, 10]
performance_indicator <- data[, 11]
project_cost <- data[, 12]
incentives <- data[, 13]
program_type <- data[, 14]
amount_financed <- data[, 15]
fuel_type <- data[, 16]
savings_kwh <- data[, 17]
savings_mmbtu <- data[, 18]
savings_energy <- data[, 19]
audit <- data[, 20]
lat_num <-
which(is.numeric(gsub('.*\\((.*),.*', '\\1', data[, 21])))
latitude <- data[lat_num, 21]
longitude <- data[lat_num, 21]
#fuel_type <- factor(gsub("Natural gas", "Natural Gas", fuel_type))
combofactor <-
function(pattern_vector,
replacement_vector,
data) {
for (i in 1:length(pattern_vector))
{
levels <- levels(data)
levels[which(pattern_vector[i] == levels)] <-
replacement_vector[i]
levels(data) <- levels
}
data
}
fuel_type <- combofactor("Natural gas", "Natural Gas", fuel_type)
gas_utility <-
combofactor(
c("Corning NATURAL Gas", "Multiple Gas Providers"),
c("Corning Natural Gas", "Unknown Gas Provider"),
gas_utility
)
norm_savings_energy <-
(savings_energy - mean(savings_energy)) / sd(savings_energy)
norm_incentives <-
(incentives - mean(incentives)) / sd(incentives)
norm_project_cost <-
(project_cost - mean(project_cost)) / sd(project_cost)
qplot(
x = incentives,
y = savings_energy,
facets = . ~ fuel_type,
color = audit
)
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
class(data)
qplot(
x = incentives,
y = savings_energy,
color = audit
)
?qplot
library(ggplot2)
?qplot
colnames(data)
colnames(data) <-
c(
"reporting_period",
"project_id",
"site_id",
"county",
"city",
"zip",
"gas_utility",
"electric_utility",
"completion_date",
"customer_type",
"performance_indicator",
"project_cost",
"incentives",
"type_of_financing",
"amount_financed",
"fuel_type",
"savings_kwh",
"savings_mmbtu",
"savings_energy",
"audit",
"location"
)
colnames(data)
head(data)
shiny::runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
?barplot
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
?builder
?selectInput
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
?list
labels <-
list(
"gas_utility" = "Gas Utility",
"electric_utility" = "Electric Utility",
"customer_type" = "Customer Type",
"performance_indicator" = "Performance Indicator",
"project_cost" = "Project Cost",
"incentives" = "Incentives",
"amount_financed" = "Amount Financed",
"fuel_type" = "Fuel Type",
"savings_kwh" = "Savings KWH",
"savings_mmbtu" = "Savings MMBTU",
"savings_energy" = "Savings Energy",
"audit" = "Audit"
)
label["gas_utility"]
labels["gas_utility"]
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
combofactor <-
function(pattern_vector,
replacement_vector,
data) {
levels <- levels(data)
for (i in 1:length(pattern_vector))
levels[which(pattern_vector[i] == levels)] <-
replacement_vector[i]
levels(data) <- levels
data
}
combofactor <-
function(pattern_vector,
replacement_vector,
vec_data) {
levels <- levels(vec_data)
for (i in 1:length(pattern_vector))
levels[which(pattern_vector[i] == levels)] <-
replacement_vector[i]
levels(vec_data) <- levels
vec_data
}
temp <- data[,7]
temp <- combofactor(
c("Corning NATURAL Gas", ""),
c("Corning Natural Gas", "Unknown Gas Provider"),
temp
)
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
?predict
?textInput
?numeric
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
?ggplot
?aes
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
fit <- lm(data = data, savings_energy ~ project_cost)
summary(fit)
coef(summary(fit))
coef(summary(fit))[1,1]
coef(summary(fit))[2,1]
summary(project_cost)
predict(fit,newdata = c(5000))
predict(fit,df = data, newdata = c(5000))
?predict
predict(fit)
pred <- predict(fit)
pred[1]
pred[10000]
summary(fit)
fit <- lm(data = data, data$savings_energy ~ data$project_cost)
summary(fit)
data$savings_kwh <- normalize(data$savings_kwh)
data$savings_mmbtu <- normalize(data$savings_mmbtu)
data$savings_energy <- normalize(data$savings_energy)
data$incentives <- normalize(data$incentives)
data$project_cost <- normalize(data$project_cost)
data$amount_financed <- normalize(data$amount_financed)
normalize <- function(vector)
{
(vector - mean(vector)) / sd(vector)
}
data$savings_kwh <- normalize(data$savings_kwh)
data$savings_mmbtu <- normalize(data$savings_mmbtu)
data$savings_energy <- normalize(data$savings_energy)
data$incentives <- normalize(data$incentives)
data$project_cost <- normalize(data$project_cost)
data$amount_financed <- normalize(data$amount_financed)
fit <- lm(data = data, data$savings_energy ~ data$project_cost)
summary(fit)
pred <- predict(fit)
head(pred)
rm(list = ls())
shiny::runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
?builder
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
runApp('R/tutorials/shiny/IBRD-stats')
setwd("~/R/tutorials/shiny/IBRD-stats")
list.files()
data <- read.csv("energystar.csv")
summary(data)
runApp()
runApp()
runApp()
?italic
?i
runApp()
runApp()
runApp()
runApp()
runApp()
